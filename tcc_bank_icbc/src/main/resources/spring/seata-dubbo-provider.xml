<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright 1999-2018 Alibaba Group Holding Ltd. ~ ~ Licensed under 
	the Apache License, Version 2.0 (the "License"); ~ you may not use this file 
	except in compliance with the License. ~ You may obtain a copy of the License 
	at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 ~ ~ Unless required by 
	applicable law or agreed to in writing, software ~ distributed under the 
	License is distributed on an "AS IS" BASIS, ~ WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. ~ See the License for the specific 
	language governing permissions and ~ limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
	default-autowire="byName">

	<bean id="fromDataSource"
		class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://192.168.56.101:3306/bank_icbc?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false
			</value>
		</property>
		<property name="username">
			<value>icbc</value>
		</property>
		<property name="password">
			<value>111111</value>
		</property>
	</bean>
	<bean id="toDataSource"
		class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://192.168.56.101:3306/bank_cmb?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false
			</value>
		</property>
		<property name="username">
			<value>cmb</value>
		</property>
		<property name="password">
			<value>111111</value>
		</property>
	</bean>

	<bean id="fromTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="fromDataSource" />
	</bean>
	<bean id="toTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="toDataSource" />
	</bean>

	<bean id="fromTransactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="propagationBehaviorName">
			<value>PROPAGATION_REQUIRES_NEW</value>
		</property>
		<property name="transactionManager">
			<ref bean="fromTransactionManager" />
		</property>
	</bean>
	<bean id="toTransactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="propagationBehaviorName">
			<value>PROPAGATION_REQUIRES_NEW</value>
		</property>
		<property name="transactionManager">
			<ref bean="toTransactionManager" />
		</property>
	</bean>

	<dubbo:application name="tcc-bank-provider" />
	<!--使用 zookeeper 注册中心暴露服务，注意要先开启 zookeeper -->
	<dubbo:registry address="nacos://192.168.56.101:8848" />
	<!--<transfer:registry address="multicast://224.5.6.7:1234?unicast=false" 
		/> -->

	<dubbo:protocol name="dubbo" port="-1" />

	<dubbo:provider timeout="30000" threads="10"
		threadpool="fixed" />

	<!-- 第一个TCC 参与者服务发布 -->
	<dubbo:service
		interface="org.sky.tcc.bankprovider.dubbo.MinusMoneyAction"
		timeout="30000" ref="minusMoneyActionImpl" />
	<!-- 第二个TCC 参与者服务发布 -->
	<dubbo:service
		interface="org.sky.tcc.bankprovider.dubbo.PlusMoneyAction"
		timeout="30000" ref="plusMoneyActionImpl" />

	<bean name="fromJdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="fromDataSource" />
		</property>
	</bean>
	<bean name="toJdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="toDataSource" />
		</property>
	</bean>

	<bean name="minusMoneyActionImpl"
		class="org.sky.tcc.bankprovider.dubbo.MinusMoneyActionImpl" />

	<bean name="plusMoneyActionImpl"
		class="org.sky.tcc.bankprovider.dubbo.PlusMoneyActionImpl" />

	<bean name="fromTransferMoneyDAO"
		class="org.sky.tcc.bankprovider.dao.FromTransferMoneyDAOImpl" />
	<bean name="toTransferMoneyDAO"
		class="org.sky.tcc.bankprovider.dao.ToTransferMoneyDAOImpl" />


	<bean class="io.seata.spring.annotation.GlobalTransactionScanner">
		<constructor-arg value="tcc-bank-provider" />
		<constructor-arg value="demo-tx-grp" />
	</bean>
</beans>